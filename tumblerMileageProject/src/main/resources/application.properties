# 모든 설정은 application.properties에서

# tomcat기본port=8080, http웹기본포트=80
server.port=8484

#contextPath
#default값은 / 이다.
#server.servlet.context-path=/myapp

####### JPA 설정
# 스키마생성 (create, create-drop, update:변경 부분만 반영, validate, none)
# table을 자동생성할것인지 , 수동생성할것인지
# 큰규모의 프로젝트는 테이블을 별도로 생성하고 코드를 작성하는 것이 일반적이다.
spring.jpa.hibernate.ddl-auto=update
# DDL생성시 데이터베이스 고유의 기능을 사용하는가?
spring.jpa.generate-ddl=false
# 실행되는 SQL문을 보여줄 것인가? 
spring.jpa.show-sql=true

####### Oracle 설정
#Dialect(방언) :  Hibernate는 DB에 맞게 SQL문을 생성하기 위해 방언을 사용한다.
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost/xe
#spring.datasource.username=hr
#spring.datasource.password=hr
logging.level.org.hibernate=info
#spring.jpa.database=oracle
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://sbproject-webservice.cj62xtad1ema.ap-northeast-2.rds.amazonaws.com:3306/sbproject_webservice
spring.datasource.username=admin
spring.datasource.password=a670c873!!

####### Thymeleaf 설정 : 아무것도 설정 안해도 됨
# spring.thymeleaf.prefix=classpath:/templates/		# ==> html 파일 경로
# spring.thymeleaf.suffix=.html
# thymeleaf를 사용하다 수정 사항이 생길 때 수정을 하면 재시작을 해줘야 한다. 이를 무시하고 브라우저 새로고침시 수정사항 반영을 취해 cache=false 설정(운영시는 true)
# spring.thymeleaf.cache=false
# spring.thymeleaf.check-template-location=true

